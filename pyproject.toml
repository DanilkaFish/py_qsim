[project]
name = "py_qsim" # Name on PyPI
readme = "README.md"
requires-python = ">=3.7"
authors = [{ "name" = "Daniil F"}]
keywords = ["example", "pybind11"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: POSIX :: Linux",
]
dynamic = ["version", "description"]


[build-system]
requires = [
    "py-build-cmake~=0.4.2",
    "pybind11>=2.13.6",
    "pybind11-stubgen~=2.5.1",
]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module]
name = "py_qsim" # Import name
directory = "src"

[tool.py-build-cmake.sdist]
# include = ["CMakeLists.txt", "cmake/*.cmake", "src/cpp_kernel"]
include = ["CMakeLists.txt", "cmake/*.cmake", "src/cpp_kernel"]

[tool.py-build-cmake.cmake]
minimum_version = "3.18"
build_type = "Release"
source_path = "." # Containing CMakeLists.txt
options = {}
# args = ["-Wdev"]
build_args = ["-j"]
build_tool_args = []
install_args = ["--verbose"]
install_components = ["python_modules", "python_stubs"]
env = {}

[tool.py-build-cmake.stubgen]
args = ["-v"]

# [tool.py-build-cmake.linux.cmake] # Linux-specific options
# generator = "Ninja Multi-Config"
# config = ["Debug", "Release"]
# options = { "CMAKE_DEBUG_POSTFIX" = "_d" }
# env = { "CMAKE_PREFIX_PATH" = "${HOME}/.local" }
# [tool.py-build-cmake.linux.cmake] # Linux-specific options
# # generator = "Ninja Multi-Config"
# # config = ["Debug", "Release"]
# options = { "CMAKE_DEBUG_POSTFIX" = "_d" }
# env = { "CMAKE_PREFIX_PATH" = "${HOME}/.local" }

